def hex_format(data, file):
    len_info = hex(len(data)).replace('0x', '').rjust(2, '0')
    offset_info = '0000'
    type_info = '00'
    check_sum = 0
    for _ in data:
        check_sum += _
    check_sum += int(len_info, 16)
    if check_sum > 256:
        check_sum = str(hex(256 - check_sum % 256).replace('0x', '').rjust(2, '0'))
    else:
        check_sum = str(hex(256 - check_sum).replace('0x', '').rjust(2, '0'))
    end_info = ':00000001FF'
    text = [':', len_info, offset_info, type_info,
            ''.join(
            map(
                lambda x:hex(x).replace('0x','').rjust(2,'0'),
                data)
            ),
            check_sum, '\n', end_info]
    return file.write(''.join(text).upper())

micro_mid = (0x91, 0x00, 0x92, 0x00, 0x14, 0x40, 0x28, 0x80, 0x80, 0x92, 0x80, 0xa0, 0x00, 0x93, 0x00, 0x60,
             0x30, 0x70, 0x1c, 0x40, 0xa0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
             0x2c, 0x2c, 0xb0, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
             0xc0, 0xf0, 0x1c, 0xd0, 0xf0, 0xb0, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
             0xa0, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,) # 微程序的中八位数据\
micro_low = (0x00, 0x40, 0x00, 0x41, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x42, 0x81,
             0x00, 0x00, 0x00, 0x02, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,)# 微程序的低八位数据


def write_hexfile(path):

    # 打印微程序代码表
    for idx, code in enumerate(zip( micro_mid, micro_low)):
        micro_code = ''.join(map(lambda x: bin(x).replace('0b', '').rjust(8, '0'), code))
        # idx = hex(idx).replace('0x', '').rjust(2, '0')
        print('{addr:0>2} : {code}'.format(addr= idx, code=micro_code))

    # 写入hex文件
    f_low = open(os.path.join(path, 'LOW.hex'), 'w')
    f_mid = open(os.path.join(path, 'MIDDLE.hex'), 'w')
    hex_format(micro_low, f_low)
    hex_format(micro_mid, f_mid)


    f_low.close()
    f_mid.close()
    f_high.close()
import os

if __name__ == '__main__':

    try:
        os.mkdir(r'./code/', )
    except:
        pass
    write_hexfile(path='code')
    print('end')
